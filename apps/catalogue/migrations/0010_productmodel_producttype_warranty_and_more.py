# Generated by Django 4.1.2 on 2023-03-29 11:53

from django.db import migrations, models
import django.db.models.deletion



def forward_product_types(apps, schema):
    product_types = ['Inverter', 'Battery', 'Solar Water Heater', 'SS Tank', 'UPS']
    ProductType = apps.get_model('catalogue', 'ProductType')
    for prod_type in product_types:
        ProductType.objects.create(name=prod_type)
    pass


def reverse_product_types(apps, schema):
    ProductType = apps.get_model('catalogue', 'ProductType')
    ProductType.objects.all().delete()
    pass


def forward_product_model(apps, schema):
    product_models = [
        {'Inverter': ['AURA 900/12V', 'AURA 1200/12V', 'SP PLUS 900/12V', 'SP PLUS 1200/12V', 'SP PLUS 2000/24V',
                      'SP PLUS 3000/48V', 'SOLIZ 1000', 'SOLIZ 2000', 'SOLIZ 3000', 'SUN ++ 1400/12V',
                      'SUN ++ 2500/24V', 'HALO 1200', 'CP 900', 'CP 1200', 'CP 1750', 'CP 2500', 'CP 3750']},
        {'Battery': ['HYTT 100 AH C20', 'HYTT 120 AH C20', 'HYTT 150 AH C20', 'HYTT 180 AH C20', 'HYTT 40 AH C20',
                     'HYTT 60 AH C20', 'HYTT 80 AH C20', 'Battery Pack Life 50AH/12V', 'Battery Pack Life 50AH/24V',
                     'Battery Pack Life 40AH/48V', 'Battery Pack Life 60AH/48V', 'Battery Pack Life 100AH/12V',
                     'Battery Pack Life 100AH/24V', 'Battery Pack Life 100AH/48V', 'HYTTS 150AH C10', 'EXIDE EP 26 AH',
                     'EXIDE EP 42 AH', 'EXIDE EP 65 AH', 'EXIDE EP 100AH', 'EIXDE EP 120AH', 'EXIDE EP 150AH',
                     'EXIDE EP 200 AH', 'EXIDE NXT 26AH', 'EXIDE NXT 42 AH', 'EXIDE NXT 65   AH', 'EXIDE NXT 100 AH',
                     'EXIDE NXT 120 AH', 'EXIDE NXT 150 AH', 'EXIDE NXT 200 AH', 'AMRON QUANTA 26 AH',
                     'AMRON QUANTA  42 AH', 'AMRON QUANTA  65 AH', 'AMRON QUANTA  100 AH', 'AMRON QUANTA  120 AH',
                     'AMRON QUANTA  150 AH', 'AMRON QUANTA  200 AH']},
        {'Solar Water Heater': ['HEXA 130 SR', 'HEXA 130', 'HEXA 200 SR', 'HEXA 200', 'HEXA P 130 SR', 'HEXA P 130',
                                'HEXA P 200 SR', 'HEXA P 200', 'DURA 130 LPD', 'DURA 200 LPD', 'DURA-P 130 LPD',
                                'DURA-P 200 LPD', 'DURA-P 260 LPD', 'DURA-P 340 LPD', 'Freedom 100 LPD SR',
                                'Freedom 100 LPD', 'Freedom 150 LPD SR', 'Freedom 150 LPD', 'Freedom 200 LPD SR',
                                'Freedom 200 LPD', 'TURBO + 100 LPD', 'TURBO + 150 LPD', 'TURBO + 200 LPD']},
        {'SS Tank': ['HY-SST 500', 'HY-SST 1000', 'HY-SST 1500', 'HY-SST 2000']},
        {'UPS': ['BIS 600/12 V', 'BIS 1000/24 V', 'GREEN 1000', 'GREEN 2000', 'GREEN 3000', 'GREEN 5000', 'AEB 5000',
                 'AEB 6000', 'AEB 6000', 'AEBTS 10', 'AEBTS 15', 'GEBTS 20', 'GEBTS 30', 'AETT 10', 'GETT 20',
                 'GETT 30', 'HT 1101', 'HT 1102', 'HT 1103', 'HT 1106', 'HT 1110', 'HT 3110', 'HT 3120', 'HT 3310',
                 'HT 3320', 'HT 3331', 'HT 3330', 'HT 3340', 'HT 3360', 'HT 3380', 'HT 33120']}
    ]
    ProductType = apps.get_model('catalogue', 'ProductType')
    ProductModel = apps.get_model('catalogue', 'ProductModel')
    for model in product_models:
        product_type = ProductType.objects.get(name=list(model.keys())[0])
        for mod in list(model.values())[0]:
            ProductModel.objects.create(name=mod, product_type=product_type)
    pass


def reverse_product_model(apps, schema):
    ProductModel = apps.get_model('catalogue', 'ProductModel')
    ProductModel.objects.all().delete()
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('user', '0001_initial'),
        ('catalogue', '0009_delete_warranty'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'product_model',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'product_type',
                'managed': True,
            },
        ),
        migrations.RunPython(code=forward_product_types, reverse_code=reverse_product_types),
        migrations.CreateModel(
            name='Warranty',
            fields=[
                ('created_at', models.DateTimeField(auto_created=True, blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('phone', models.CharField(max_length=100)),
                ('mail', models.CharField(max_length=250)),
                ('serial_number', models.CharField(max_length=250)),
                ('dealer_name', models.CharField(blank=True, max_length=250, null=True)),
                ('invoice_date', models.DateField()),
                ('invoice_number', models.CharField(blank=True, max_length=250, null=True)),
                ('contact_person', models.CharField(max_length=250)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.FileField(blank=True, max_length=250, null=True, upload_to='')),
                ('billing_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_address', to='user.address')),
                ('installation_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='installation_address', to='user.address')),
                ('model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogue.productmodel')),
                ('product_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogue.producttype')),
            ],
            options={
                'db_table': 'waranty',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='productmodel',
            name='product_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogue.producttype'),
        ),
        migrations.RunPython(code=forward_product_model, reverse_code=reverse_product_model),
    ]
